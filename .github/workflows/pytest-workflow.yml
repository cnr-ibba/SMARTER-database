
name: Pytest Workflow

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
      - devel
  pull_request:
    branches:
      - master
      - devel

jobs:
  pytest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache conda
        uses: actions/cache@v4
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: false
          activate-environment: SMARTER-database
          channel-priority: strict
          environment-file: conda-linux-64.lock
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Cache poetry
        uses: actions/cache@v4
        with:
          # This path is specific to Ubuntu
          path: /.cache/pypoetry
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
            ${{ runner.os }}-

      - name: Conda info
        shell: bash -l {0}
        run: conda info

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          make requirements
          pip install coveralls

      - name: Conda list
        shell: pwsh
        run: conda list

      - name: Test with coverage
        shell: bash -l {0}
        run: coverage run --source src -m pytest

      - name: Uploading coverage to coveralls
        shell: bash -l {0}
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
